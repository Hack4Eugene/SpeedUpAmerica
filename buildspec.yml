version: 0.2
env:
  parameter-store:
      SUA_GEOLITE_ACCESS_KEY: SUA_GEOLITE_ACCESS_KEY
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - REPOSITORY_URI=238241637211.dkr.ecr.us-west-2.amazonaws.com/speedupamerica
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - chmod +x ./update_data.sh
      - echo Getting latest GeoLite2 ASN DB
      - curl -O "https://download.maxmind.com/app/geoip_download?edition_id=GeoLite2-ASN&license_key=${SUA_GEOLITE_ACCESS_KEY}&suffix=tar.gz"
      - tar -xf GeoLite2-ASN.tar.gz
      - cp GeoLite2-ASN_*/GeoLite2-ASN.mmdb .
      - rm -r GeoLite2-ASN_*
      - rm GeoLite2-ASN.tar.gz
      - mkdir -p keys
      - aws s3 cp s3://sua-private/$S3_BIGQUERY_KEY_FILENAME $MLAB_BIGQUERY_PRIVATE_KEY
      - mkdir -p data
      - aws s3 cp s3://sua-datafiles/cb_2016_us_census_tracts.json data/cb_2016_us_census_tracts.json
      - aws s3 cp s3://sua-datafiles/us_zip_codes.json data/us_zip_codes.json
      - aws s3 cp s3://sua-datafiles/tl_2018_16_tabblock10.json data/tl_2018_16_tabblock10.json
      - aws s3 cp s3://sua-datafiles/tl_2018_41_tabblock10.json data/tl_2018_41_tabblock10.json
      - aws s3 cp s3://sua-datafiles/tl_2018_53_tabblock10.json data/tl_2018_53_tabblock10.json
      - aws s3 cp s3://sua-datafiles/tl_2018_16_tract.json data/tl_2018_16_tract.json
      - aws s3 cp s3://sua-datafiles/tl_2018_41_tract.json data/tl_2018_41_tract.json
      - aws s3 cp s3://sua-datafiles/tl_2018_53_tract.json data/tl_2018_53_tract.json
      - aws s3 cp s3://sua-datafiles/tl_2018_us_zcta510.json data/tl_2018_us_zcta510.json
      - aws s3 cp s3://sua-datafiles/tl_2018_us_county.json data/tl_2018_us_county.json
      - aws s3 cp s3://sua-datafiles/tl_2018_us_state.json data/tl_2018_us_state.json
      - docker build -t $REPOSITORY_URI:latest .
      - docker tag $REPOSITORY_URI:latest $REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      - echo Writing image definitions file...
      - printf '[{"name":"speedupamerica","imageUri":"%s"}]' $REPOSITORY_URI:$IMAGE_TAG > imagedefinitions.json
artifacts:
    files: imagedefinitions.json
